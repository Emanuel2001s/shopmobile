<?php
/**
 * Script de Verifica√ß√£o das Corre√ß√µes
 * Verifica se os problemas identificados nos logs do Dokploy foram resolvidos
 */

header('Content-Type: text/html; charset=utf-8');
ini_set('display_errors', 1);
ini_set('error_reporting', E_ALL);

echo "<h1>üîß Verifica√ß√£o das Corre√ß√µes - ShopMobile</h1>";
echo "<p>Verificando se os problemas identificados nos logs foram resolvidos...</p>";
echo "<hr>";

// 1. Verificar configura√ß√µes do Apache
echo "<h2>1. Configura√ß√µes do Apache</h2>";
echo "<ul>";

// Verificar se mod_rewrite est√° habilitado
if (function_exists('apache_get_modules')) {
    $modules = apache_get_modules();
    if (in_array('mod_rewrite', $modules)) {
        echo "<li>‚úÖ mod_rewrite est√° habilitado</li>";
    } else {
        echo "<li>‚ùå mod_rewrite N√ÉO est√° habilitado</li>";
    }
    
    if (in_array('mod_deflate', $modules)) {
        echo "<li>‚úÖ mod_deflate est√° habilitado</li>";
    } else {
        echo "<li>‚ùå mod_deflate N√ÉO est√° habilitado</li>";
    }
    
    if (in_array('mod_expires', $modules)) {
        echo "<li>‚úÖ mod_expires est√° habilitado</li>";
    } else {
        echo "<li>‚ùå mod_expires N√ÉO est√° habilitado</li>";
    }
} else {
    echo "<li>‚ö†Ô∏è Fun√ß√£o apache_get_modules() n√£o dispon√≠vel</li>";
}

// Verificar ServerName
if (isset($_SERVER['SERVER_NAME']) && !empty($_SERVER['SERVER_NAME'])) {
    echo "<li>‚úÖ ServerName definido: " . htmlspecialchars($_SERVER['SERVER_NAME']) . "</li>";
} else {
    echo "<li>‚ùå ServerName N√ÉO definido</li>";
}

echo "</ul>";

// 2. Verificar configura√ß√µes PHP
echo "<h2>2. Configura√ß√µes PHP</h2>";
echo "<ul>";

$php_configs = [
    'upload_max_filesize' => '10M',
    'post_max_size' => '10M',
    'max_execution_time' => '300',
    'memory_limit' => '256M',
    'display_errors' => 'Off',
    'log_errors' => 'On'
];

foreach ($php_configs as $config => $expected) {
    $current = ini_get($config);
    if ($config === 'display_errors') {
        $status = ($current == '0' || strtolower($current) == 'off') ? '‚úÖ' : '‚ùå';
    } elseif ($config === 'log_errors') {
        $status = ($current == '1' || strtolower($current) == 'on') ? '‚úÖ' : '‚ùå';
    } else {
        $status = ($current >= $expected) ? '‚úÖ' : '‚ùå';
    }
    echo "<li>{$status} {$config}: {$current} (esperado: {$expected})</li>";
}

echo "</ul>";

// 3. Verificar extens√µes PHP
echo "<h2>3. Extens√µes PHP</h2>";
echo "<ul>";

$required_extensions = ['pdo', 'pdo_mysql', 'mysqli', 'gd', 'zip'];
foreach ($required_extensions as $ext) {
    if (extension_loaded($ext)) {
        echo "<li>‚úÖ {$ext} est√° carregada</li>";
    } else {
        echo "<li>‚ùå {$ext} N√ÉO est√° carregada</li>";
    }
}

echo "</ul>";

// 4. Verificar vari√°veis de ambiente
echo "<h2>4. Vari√°veis de Ambiente</h2>";
echo "<ul>";

// Tentar carregar .env
if (file_exists('.env')) {
    echo "<li>‚úÖ Arquivo .env encontrado</li>";
    $env_content = file_get_contents('.env');
    $env_lines = explode("\n", $env_content);
    $env_vars = [];
    
    foreach ($env_lines as $line) {
        if (strpos($line, '=') !== false && !empty(trim($line)) && substr(trim($line), 0, 1) !== '#') {
            list($key, $value) = explode('=', $line, 2);
            $env_vars[trim($key)] = trim($value);
        }
    }
    
    $required_vars = ['DB_HOST', 'DB_USERNAME', 'DB_PASSWORD', 'DB_NAME'];
    foreach ($required_vars as $var) {
        if (isset($env_vars[$var]) && !empty($env_vars[$var])) {
            echo "<li>‚úÖ {$var} est√° definida</li>";
        } else {
            echo "<li>‚ùå {$var} N√ÉO est√° definida ou est√° vazia</li>";
        }
    }
} else {
    echo "<li>‚ùå Arquivo .env N√ÉO encontrado</li>";
}

echo "</ul>";

// 5. Verificar conex√£o com banco de dados
echo "<h2>5. Conex√£o com Banco de Dados</h2>";
echo "<ul>";

try {
    if (file_exists('database/db_connect_env.php')) {
        echo "<li>‚úÖ Arquivo de conex√£o encontrado</li>";
        
        // Tentar incluir o arquivo de conex√£o
        ob_start();
        include 'database/db_connect_env.php';
        $output = ob_get_clean();
        
        if (isset($pdo) && $pdo instanceof PDO) {
            echo "<li>‚úÖ Conex√£o PDO estabelecida com sucesso</li>";
            
            // Testar uma query simples
            try {
                $stmt = $pdo->query("SELECT 1");
                echo "<li>‚úÖ Query de teste executada com sucesso</li>";
            } catch (Exception $e) {
                echo "<li>‚ùå Erro na query de teste: " . htmlspecialchars($e->getMessage()) . "</li>";
            }
        } else {
            echo "<li>‚ùå Falha ao estabelecer conex√£o PDO</li>";
        }
    } else {
        echo "<li>‚ùå Arquivo de conex√£o N√ÉO encontrado</li>";
    }
} catch (Exception $e) {
    echo "<li>‚ùå Erro ao testar conex√£o: " . htmlspecialchars($e->getMessage()) . "</li>";
}

echo "</ul>";

// 6. Verificar permiss√µes de diret√≥rios
echo "<h2>6. Permiss√µes de Diret√≥rios</h2>";
echo "<ul>";

$directories = ['uploads', 'uploads/sliders'];
foreach ($directories as $dir) {
    if (is_dir($dir)) {
        if (is_writable($dir)) {
            echo "<li>‚úÖ Diret√≥rio {$dir} existe e √© grav√°vel</li>";
        } else {
            echo "<li>‚ùå Diret√≥rio {$dir} existe mas N√ÉO √© grav√°vel</li>";
        }
    } else {
        echo "<li>‚ùå Diret√≥rio {$dir} N√ÉO existe</li>";
    }
}

echo "</ul>";

// 7. Verificar arquivos cr√≠ticos
echo "<h2>7. Arquivos Cr√≠ticos</h2>";
echo "<ul>";

$critical_files = [
    'index.php',
    'database/db_connect_env.php',
    '.htaccess',
    'apache-config.conf'
];

foreach ($critical_files as $file) {
    if (file_exists($file)) {
        echo "<li>‚úÖ {$file} existe</li>";
    } else {
        echo "<li>‚ùå {$file} N√ÉO existe</li>";
    }
}

echo "</ul>";

// Resumo final
echo "<hr>";
echo "<h2>üìä Resumo da Verifica√ß√£o</h2>";
echo "<p><strong>Data/Hora:</strong> " . date('d/m/Y H:i:s') . "</p>";
echo "<p><strong>Vers√£o PHP:</strong> " . PHP_VERSION . "</p>";
echo "<p><strong>Sistema Operacional:</strong> " . PHP_OS . "</p>";
echo "<p><strong>Servidor Web:</strong> " . (isset($_SERVER['SERVER_SOFTWARE']) ? $_SERVER['SERVER_SOFTWARE'] : 'N√£o identificado') . "</p>";

echo "<div style='background-color: #f0f8ff; padding: 15px; border-left: 4px solid #007cba; margin: 20px 0;'>";
echo "<h3>üöÄ Pr√≥ximos Passos:</h3>";
echo "<ol>";
echo "<li>Se houver itens marcados com ‚ùå, corrija-os antes do deploy</li>";
echo "<li>Configure as vari√°veis de ambiente no Dokploy usando o arquivo dokploy.env</li>";
echo "<li>Fa√ßa o deploy usando o Dockerfile otimizado</li>";
echo "<li>Monitore os logs ap√≥s o deploy para verificar se os erros foram resolvidos</li>";
echo "</ol>";
echo "</div>";

echo "<p><em>Script executado em: " . date('d/m/Y H:i:s') . "</em></p>";
?>